scores = {
    "数学": 82,
    "国語": 74,
    "英語": 60,
    "理科": 92,
    "社会": 70
}

'''
5教科のテストの点数を上記のような
scoresという辞書で表したします。

この時、理科は社会より何点高いかを
「◯点」という文字で出力するプログラムを
作ってください。
'''

science = scores["理科"]
social = scores["社会"]
diff = science - social
text = f"理科は社会より{diff}点高いです。"
print(text)

'''
平均点を出力してみる
'''

scores_lst = list(scores.values())
avg_scores = sum(scores_lst) / len(scores_lst)
print(f"平均点数: {avg_scores} 点")

'''
集合とは？タプルとは？

集合

- 複数の値を１つにまとめたもの
- 順序がない -> indexで指定できない
- 同じ値を持たない
- 初心者のうちが集合を使うことが少ない

= 波括弧で要素を囲む
x = {1, 2, 4}
= 書き方が辞書と似ているが...
辞書は key と value のペアで一つの要素
集合は1つの値で1つの要素

集合の操作

・要素を追加
集合.add(要素)
x = {1, 3, 4}
x.add(7)

・要素を削除
集合.discard(要素)
x = {1, 2, 4}
x.discard(2)
指定した値がなくてもok

x.remove(2)
指定した値がないとエラー

・空の集合
x = set()

・集合は数学の集合のように和集合、差集合、
積集合が取得できる
x = {0, 1, 3, 6}
y = {0, 2, 5, 6}

和集合
z = x | y
>> print(z)
{0, 1, 2, 3, 5, 6}

差集合
z = x - y
>> print(z)
{1, 3}

積集合
z = x & y
>> print(z)
{0, 6}

集合はリストや辞書より使われるケースは少ないが
例えば
ユーザグループA と ユーザグループB があるとした時
- 両方に入っているユーザだけを抽出する
- 片方にだけ入っているユーザだけを抽出する
といったケースで集合は便利！

タプル
- 複数の値を１つにまとめたもの
- 順序がある -> indexで指定できる
- 同じ値を持てる
- 値を変更できない
- 初心者のうちは意識せずに扱っている

- 丸括弧で要素を囲む
x = (1, 2, 4)
タプル[インデックス]で値の参照ができる

- タプルを使うケース
・関数を扱う中でよく出てくる
・複数の要素で１つのデータとして表されるようなもの
例えば -> 地上の位置(緯度, 経度)
tokyo_st_pos = (35.6809591, 139.7673068)

'''
