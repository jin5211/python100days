
(obj7.py, obj8.pyのコードを参照)
🌟 コンポジション（Composition）とは？

コンポジションとは、「クラスの中に別のオブジェクトを 部品として 組み込むことで、より複雑な機能を作り出す方法」です。

📝 ポイント：
	•	「持っている（has-a関係）」 と表現されます。
	•	例：
	•	車 は エンジン を「持っている」
	•	パソコン は モニター を「持っている」

⸻

🌳 継承（is-a関係）との違いは？

概念	例
継承（is-a関係）	猫（Cat）は動物（Animal）である。
コンポジション（has-a関係）	車（Car）はエンジン（Engine）を持っている。


⸻

🛠️ 例のコード（コンポジション）

例えば、「車（Car）」クラスの中に「エンジン（Engine）」クラスのインスタンスを組み込んでみましょう！

# エンジンクラス（単独で動作可能）
class Engine:
    def start(self):
        print("エンジンを始動します。")

    def stop(self):
        print("エンジンを停止します。")


# 車クラス（Engineを部品として持っている＝コンポジション）
class Car:
    def __init__(self, brand):
        self.brand = brand  # 車のブランド名
        self.engine = Engine()  # エンジンのオブジェクトを作る（これがコンポジション！）

    def start(self):
        print(f"{self.brand}の車をスタートさせます。")
        self.engine.start()  # エンジンを始動させる

    def stop(self):
        print(f"{self.brand}の車を停止させます。")
        self.engine.stop()  # エンジンを停止させる


# 実際に使ってみる
my_car = Car("Toyota")
my_car.start()
my_car.stop()


⸻

📝 このコードのポイント

✅ CarクラスはEngineクラスを「部品」として持っている（self.engine = Engine()）
✅ Carクラスのメソッドstart()やstop()で、Engineクラスのメソッドを呼び出している
✅ これが「コンポジション（has-a関係）」です。

⸻

🔑 まとめ

項目	内容
コンポジション	クラスの中に別のオブジェクトを「部品」として取り込んで、新しい機能を作ること。
例	車（Car）はエンジン（Engine）を持っている。
キーワード	has-a関係（持っている）


⸻
